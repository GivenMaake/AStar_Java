This is an A* search algorithm for path finding, coded in java using Intellij Idea 13.1.3 IDE. It reads a specified text file saved in the root folder of the project and load all its lines in the declared 1D and 2D array variables which are within the code arranging each character in the form of a map/table. Each character in this arrays has coordinates and it can be located. Surrounding tiles of each an every tile are also determined and the cost to move to each of them from a current tile is as well calculated. Manhattan distance formula is incorporated within the code to help in calculating the shortest distance from the start point to the goal point while preventing to check tiles twice.

These project has been tested using two files that are In the root folder of this project, named large_map.txt and Example_map.txt. More focus was on solving the path of large_map.txt using Example_map.txt file as a reference for a working code. large_map_OUTPUT.txt which serves as a resolved path for large_map.txt is as well generated by the code and available in the root folder.



1. Importing the project:

1.1. Clone or download a zipped file of this project from the given repository.
1.2. Extract a downloaded zip file to your local disk using any of your zip extraction tool.
1.3. Open Intellij Idea 13.1.3 IDE.
1.4. Navigate to 'File' > 'Import Project'.
1.5. Navigate to the location where you extracted the above mentioned zip file

(NOTE: MAKE SURE TO SELECT THE 'ROOT' FOLDER OF THIS PROJECT, *EXTRACTION TOOLS MAY CREATE A FOLDER WITH THE SAME NAME
AS THE PROJECT ROOT FOLDER NAME, SELECTING THE FOLDER ABOVE THE ROOT FOLDER OF THE PROJECT MAY CAUSE THIS PROJECT TO
FAIL LOCATING txt FILES THAT ARE WITHIN ITS ROOT FOLDER, RESULTING IN ERRORS)

1.6. After the correct root folder of the project is selected then click 'Ok'.
1.7. Click 'Next' on all dialogs that will appear till 'Finish'

2. Running the project:

This project is designed to can be run/debugged in two configurations, 
a) Application Configuration or
b) Applet Configuration.

Running it in Application Configuration will only write the output results of the map in a text file, while Applet Configuration will write the output results of the map in a text file and the same results written to the text file will be displayed using applet viewer. Both the output text files of the above mentioned configurations
will be saved in the same directory as their given map file.

TO switch between the large_map.txt and Example_map.txt you will need to change the 'MapFileName' variable(it is declared first in AStarAlgorithm_Main.java class)


2.1. Running the project on Application configuration

2.1.1. Click 'Run' from the menu and navigate to 'Edit Configurations'.
2.1.2. Select add/+ at the top left corner and click 'Application' from the left pane of the run configuration window.
2.1.3. Under 'Configuration' tab on the right hand side of the window, Type any name next to 'Name' and  make sure to browse and set the 'Main class' to
 'AStarAlgorithm_Main'
2.1.4. Finally click 'run' at the bottom of the window
2.1.5. After a successful run, an output file will be created under project explorer pane, in a project's root folder
A_Star Java\large_map_OUTPUT.txt and it can be directly opened to view its contents.

2.2. Running the project on Applet configuration

2.2.1. Create a folder under c: drive named 'Astar'
2.2.2. Copy your 'large_map.txt' from the project's Test_Maps folder to the above created folder.
2.2.3. In Intellij, click 'Run' from the menu and navigate to 'Edit Configurations'.
2.2.4. Select add/+ at the top left corner and click 'Applet' from the left pane of the run configuration window.
2.2.5. Under 'Configuration' tab on the right hand side of the window, Type any name next to 'Name' and make sure to browse and set 'Applet class' to
 'AStarAlgorithm_Main'
2.2.6. Finally click 'run' at the bottom of the window
2.2.7. After a successful run, an output file will be created in c:\Astar\large_map_OUTPUT.txt
and it can be directly opened to view its contents.
